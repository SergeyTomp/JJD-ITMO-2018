Map <String, Staff> staffList - вариант базы данных: после логина получаем оттуда ссылку на объект . Сериализуется в файл dataBase.bin.
Вариант развития - посмотреть в сторону xml, при старте кода загружать из него Map<>staffList и Map<>accessTable.

UserFactory больше  не используется, создаются объекты Staff с разным идентификатором доступа.

В юзере добавлен enum-идентификатор доступа.
(для гибкости настройки индивидуального доступа сделать в юзере ArrayList <enum> -идентификаторов дополнительно разрешённых админом команд).
Юзеры делятся на админов и рядовых через идентификатор доступа, т.е. админов может быть несколько.

При старте кода в классе Company создаётся:
⦁	Map <AccessLevel, ArrayList<CommandStrings>> таблица прав доступа
        ключ: enum-идентификатор уровень доступа
        значение: ArrayList с перечнем enum-идентификаторов доступных команд.
⦁	Map <String, Staff> staffList - пустая база данных персонала
⦁	Первый админ: admin 123 ADMIN, заносится в staffList

Выполнение команд: (перечень идентификаторов в CommandStings, все команды вводятся заглавными буквами)
1. по enum-идентификатору команды создаётся объект команды в CommandFactory
2. к нему применяется метод .make(Staff user) с параметром объект юзера
3. метод проверяет наличие идентификатора доступа юзера в Мар<Enum,ArrayList > таблицы прав доступов:
    - по ключу уровня доступа (enum) из юзера выходим на соответствующий ArrayList с перечнем enum-идентификаторов доступных команд
    - проверяем наличие там enum ID текущей команды. Если прав нет - отказ выполнения.

Проверки:
через Validator:
1. длина пароля >= 3-х символов
2. логин может содержать только буквы
3. при создании задачи дата начала не раньше текущей, дата окончания не раньше начала
через java-исключения:
1. коректность формата даты
2. корректность текста и регистра команды
3. корректность текста и регистра идентификатора доступа

